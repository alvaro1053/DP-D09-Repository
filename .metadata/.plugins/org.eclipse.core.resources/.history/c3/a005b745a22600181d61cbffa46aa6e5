package services;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations={"classpath:spring/junit.xml"})
@Transactional
public class RendeServiceTest {

	@Autowired
	private RendeService rendeService;
	
	@Test
	public void diverFindByPrincipal(){
		Object testingData[][]= {
				{"user1","rende1",null}, 
				{"admin","rende1",null},
				{"manager1","rende1",null},
				{"null",IllegalArgumentException.class}};
		for (int i = 0; i < testingData.length;i++){
			templateFindByPrincipal((String) testingData[i][0], (String) testingData[i][1],(Class<?>) testingData[i][2]); 
		
		}
	}

	private void templateFindByPrincipal(String string, String string2,
			Class<?> class1) {
		// TODO Auto-generated method stub
		
	}
	
	protected void templateFindByPrincipal(String username, String rendeBean Class<?> expected){
		Class<?> caught;
		caught = null;
		try{
			authenticate(username);
			actorService.findByPrincipal();
			unauthenticate();
		} catch(Throwable oops){
			caught = oops.getClass();
		}
		checkExceptions(expected, caught);
	}
	
}
